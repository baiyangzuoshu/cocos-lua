--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require("csd.LuaScript.LuaExtend")

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}	
Result["MPLISTLISTDATA"] = { 	
"ui/02_01_Boast/02_01_Boast_1.plist",	
"ui/02_01_Boast/02_01_Boast_2.plist",	
}	

------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(Layer)
layout:setSize({width = 50.0000, height = 50.0000})

--Create AudioHead
local AudioHead=cc.Node:create()
AudioHead:setName("AudioHead")
AudioHead:setTag(243)
AudioHead:setCascadeColorEnabled(true)
AudioHead:setCascadeOpacityEnabled(true)
AudioHead:setPosition(25.0000, 25.0000)
AudioHead:setScaleX(0.5000)
AudioHead:setScaleY(0.5000)
layout = ccui.LayoutComponent:bindLayoutComponent(AudioHead)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setLeftMargin(25.0000)
layout:setRightMargin(25.0000)
layout:setTopMargin(25.0000)
layout:setBottomMargin(25.0000)
Layer:addChild(AudioHead)

--Create AudioHeadButton_2
local AudioHeadButton_2 = cc.Sprite:createWithSpriteFrameName("02_01_Boast/icon_080.png")
AudioHeadButton_2:setName("AudioHeadButton_2")
AudioHeadButton_2:setTag(234)
AudioHeadButton_2:setCascadeColorEnabled(true)
AudioHeadButton_2:setCascadeOpacityEnabled(true)
AudioHeadButton_2:setPosition(40.0000, 9.0000)
AudioHeadButton_2:setScaleX(0.5000)
AudioHeadButton_2:setScaleY(0.5000)
layout = ccui.LayoutComponent:bindLayoutComponent(AudioHeadButton_2)
layout:setPositionPercentX(0.8000)
layout:setPositionPercentY(0.1800)
layout:setPercentWidth(1.1600)
layout:setPercentHeight(1.1600)
layout:setSize({width = 58.0000, height = 58.0000})
layout:setLeftMargin(11.0000)
layout:setRightMargin(-19.0000)
layout:setTopMargin(12.0000)
layout:setBottomMargin(-20.0000)
AudioHeadButton_2:setBlendFunc({src = 1, dst = 771})
Layer:addChild(AudioHeadButton_2)

--Create AudioHeadLoadingBar_2
local AudioHeadLoadingBar_2 = ccui.LoadingBar:create()
AudioHeadLoadingBar_2:loadTexture("02_01_Boast/icon_082.png", 1)
AudioHeadLoadingBar_2:ignoreContentAdaptWithSize(false)
AudioHeadLoadingBar_2:setLayoutComponentEnabled(true)
AudioHeadLoadingBar_2:setName("AudioHeadLoadingBar_2")
AudioHeadLoadingBar_2:setTag(584)
AudioHeadLoadingBar_2:setCascadeColorEnabled(true)
AudioHeadLoadingBar_2:setCascadeOpacityEnabled(true)
AudioHeadLoadingBar_2:setPosition(40.0000, 10.5000)
AudioHeadLoadingBar_2:setScaleX(0.5000)
AudioHeadLoadingBar_2:setScaleY(0.5000)
AudioHeadLoadingBar_2:setRotationSkewX(-90.0000)
AudioHeadLoadingBar_2:setRotationSkewY(-90.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(AudioHeadLoadingBar_2)
layout:setPositionPercentX(0.8000)
layout:setPositionPercentY(0.2100)
layout:setPercentWidth(0.3200)
layout:setPercentHeight(0.1600)
layout:setSize({width = 16.0000, height = 8.0000})
layout:setLeftMargin(32.0000)
layout:setRightMargin(2.0000)
layout:setTopMargin(35.5000)
layout:setBottomMargin(6.5000)
Layer:addChild(AudioHeadLoadingBar_2)

--Create AudioHeadPanel_2
local AudioHeadPanel_2 = ccui.Layout:create()
AudioHeadPanel_2:ignoreContentAdaptWithSize(false)
AudioHeadPanel_2:setClippingEnabled(false)
AudioHeadPanel_2:setBackGroundColorOpacity(166)
AudioHeadPanel_2:setTouchEnabled(true);
AudioHeadPanel_2:setLayoutComponentEnabled(true)
AudioHeadPanel_2:setName("AudioHeadPanel_2")
AudioHeadPanel_2:setTag(630)
AudioHeadPanel_2:setCascadeColorEnabled(true)
AudioHeadPanel_2:setCascadeOpacityEnabled(true)
AudioHeadPanel_2:setAnchorPoint(0.5000, 0.5000)
AudioHeadPanel_2:setPosition(25.0000, 25.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(AudioHeadPanel_2)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(1.2000)
layout:setPercentHeight(1.2000)
layout:setSize({width = 60.0000, height = 60.0000})
layout:setLeftMargin(-5.0000)
layout:setRightMargin(-5.0000)
layout:setTopMargin(-5.0000)
layout:setBottomMargin(-5.0000)
Layer:addChild(AudioHeadPanel_2)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Layer
return result;
end

return Result

