--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require("csd.LuaScript.LuaExtend")

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}	
Result["MPLISTLISTDATA"] = { 	
"ui/01_03_PropKnapsack/01_03_PropKnapsack_1.plist",	
"ui/02_01_Boast/02_01_Boast_1.plist",	
"ui/02_01_Boast/02_01_Boast_2.plist",	
"ui/00_01_Common/00_01_Common_1.plist",	
"ui/Default/Default_1.plist",	
}	

------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(Layer)
layout:setSize({width = 126.0000, height = 126.0000})

--Create Prop
local Prop=cc.Node:create()
Prop:setName("Prop")
Prop:setTag(783)
Prop:setCascadeColorEnabled(true)
Prop:setCascadeOpacityEnabled(true)
Prop:setPosition(63.0000, 63.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Prop)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setLeftMargin(63.0000)
layout:setRightMargin(63.0000)
layout:setTopMargin(63.0000)
layout:setBottomMargin(63.0000)
Layer:addChild(Prop)

--Create PropFrame
local PropFrame = cc.Sprite:createWithSpriteFrameName("01_03_PropKnapsack/frame_053.png")
PropFrame:setName("PropFrame")
PropFrame:setTag(101)
PropFrame:setCascadeColorEnabled(true)
PropFrame:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(PropFrame)
layout:setSize({width = 126.0000, height = 126.0000})
layout:setLeftMargin(-63.0000)
layout:setRightMargin(-63.0000)
layout:setTopMargin(-63.0000)
layout:setBottomMargin(-63.0000)
PropFrame:setBlendFunc({src = 1, dst = 771})
Prop:addChild(PropFrame)

--Create PropIcon
local PropIcon = ccui.ImageView:create()
PropIcon:ignoreContentAdaptWithSize(false)
PropIcon:loadTexture("Default/ImageFile.png", 1)
PropIcon:setLayoutComponentEnabled(true)
PropIcon:setName("PropIcon")
PropIcon:setTag(788)
PropIcon:setCascadeColorEnabled(true)
PropIcon:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(PropIcon)
layout:setSize({width = 100.0000, height = 100.0000})
layout:setLeftMargin(-50.0000)
layout:setRightMargin(-50.0000)
layout:setTopMargin(-50.0000)
layout:setBottomMargin(-50.0000)
Prop:addChild(PropIcon)

--Create PropNum
local PropNum = ccui.Text:create()
PropNum:ignoreContentAdaptWithSize(true)
PropNum:setTextAreaSize({width = 0, height = 0})
PropNum:setFontName("font/Font003.ttf")
PropNum:setFontSize(28)
PropNum:setString([[1000]])
PropNum:setTextHorizontalAlignment(2)
PropNum:setTextVerticalAlignment(1)
PropNum:setLayoutComponentEnabled(true)
PropNum:setName("PropNum")
PropNum:setTag(789)
PropNum:setCascadeColorEnabled(true)
PropNum:setCascadeOpacityEnabled(true)
PropNum:setAnchorPoint(1.0000, 0.5000)
PropNum:setPosition(48.0000, -30.0000)
PropNum:setTextColor({r = 0, g = 0, b = 0})
layout = ccui.LayoutComponent:bindLayoutComponent(PropNum)
layout:setSize({width = 55.0000, height = 33.0000})
layout:setLeftMargin(-7.0000)
layout:setRightMargin(-48.0000)
layout:setTopMargin(13.5000)
layout:setBottomMargin(-46.5000)
Prop:addChild(PropNum)

--Create PropPanel
local PropPanel = ccui.Layout:create()
PropPanel:ignoreContentAdaptWithSize(false)
PropPanel:setClippingEnabled(false)
PropPanel:setBackGroundColorOpacity(102)
PropPanel:setTouchEnabled(true);
PropPanel:setLayoutComponentEnabled(true)
PropPanel:setName("PropPanel")
PropPanel:setTag(790)
PropPanel:setCascadeColorEnabled(true)
PropPanel:setCascadeOpacityEnabled(true)
PropPanel:setAnchorPoint(0.5000, 0.5000)
layout = ccui.LayoutComponent:bindLayoutComponent(PropPanel)
layout:setSize({width = 124.0000, height = 124.0000})
layout:setLeftMargin(-62.0000)
layout:setRightMargin(-62.0000)
layout:setTopMargin(-62.0000)
layout:setBottomMargin(-62.0000)
Prop:addChild(PropPanel)

--Create UsingNode
local UsingNode=cc.Node:create()
UsingNode:setName("UsingNode")
UsingNode:setTag(83)
UsingNode:setCascadeColorEnabled(true)
UsingNode:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(UsingNode)
Prop:addChild(UsingNode)

--Create UsingBg
local UsingBg = ccui.ImageView:create()
UsingBg:ignoreContentAdaptWithSize(false)
UsingBg:loadTexture("01_03_PropKnapsack/frame_138.png", 1)
UsingBg:setLayoutComponentEnabled(true)
UsingBg:setName("UsingBg")
UsingBg:setTag(84)
UsingBg:setCascadeColorEnabled(true)
UsingBg:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(UsingBg)
layout:setSize({width = 126.0000, height = 126.0000})
layout:setLeftMargin(-63.0000)
layout:setRightMargin(-63.0000)
layout:setTopMargin(-63.0000)
layout:setBottomMargin(-63.0000)
UsingNode:addChild(UsingBg)

--Create UsingIcon
local UsingIcon = ccui.ImageView:create()
UsingIcon:ignoreContentAdaptWithSize(false)
UsingIcon:loadTexture("02_01_Boast/button_017.png", 1)
UsingIcon:setLayoutComponentEnabled(true)
UsingIcon:setName("UsingIcon")
UsingIcon:setTag(76)
UsingIcon:setCascadeColorEnabled(true)
UsingIcon:setCascadeOpacityEnabled(true)
UsingIcon:setPosition(35.0000, -36.9999)
layout = ccui.LayoutComponent:bindLayoutComponent(UsingIcon)
layout:setSize({width = 48.0000, height = 48.0000})
layout:setLeftMargin(11.0000)
layout:setRightMargin(-59.0000)
layout:setTopMargin(12.9999)
layout:setBottomMargin(-60.9999)
UsingNode:addChild(UsingIcon)

--Create InterimTipDotIcon
local InterimTipDotIcon = ccui.ImageView:create()
InterimTipDotIcon:ignoreContentAdaptWithSize(false)
InterimTipDotIcon:loadTexture("00_01_Common/icon_063.png", 1)
InterimTipDotIcon:setLayoutComponentEnabled(true)
InterimTipDotIcon:setName("InterimTipDotIcon")
InterimTipDotIcon:setTag(296)
InterimTipDotIcon:setCascadeColorEnabled(true)
InterimTipDotIcon:setCascadeOpacityEnabled(true)
InterimTipDotIcon:setPosition(40.0000, 55.9998)
layout = ccui.LayoutComponent:bindLayoutComponent(InterimTipDotIcon)
layout:setSize({width = 80.0000, height = 54.0000})
layout:setRightMargin(-80.0000)
layout:setTopMargin(-82.9998)
layout:setBottomMargin(28.9998)
Prop:addChild(InterimTipDotIcon)

--Create InterimTipDotIconText
local InterimTipDotIconText = ccui.Text:create()
InterimTipDotIconText:ignoreContentAdaptWithSize(true)
InterimTipDotIconText:setTextAreaSize({width = 0, height = 0})
InterimTipDotIconText:setFontName("font/Font001.ttf")
InterimTipDotIconText:setFontSize(20)
InterimTipDotIconText:setString([[New]])
InterimTipDotIconText:setLayoutComponentEnabled(true)
InterimTipDotIconText:setName("InterimTipDotIconText")
InterimTipDotIconText:setTag(297)
InterimTipDotIconText:setCascadeColorEnabled(true)
InterimTipDotIconText:setCascadeOpacityEnabled(true)
InterimTipDotIconText:setPosition(40.0000, 28.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(InterimTipDotIconText)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5185)
layout:setPercentWidth(0.6250)
layout:setPercentHeight(0.4815)
layout:setSize({width = 50.0000, height = 26.0000})
layout:setLeftMargin(15.0000)
layout:setRightMargin(15.0000)
layout:setTopMargin(13.0000)
layout:setBottomMargin(15.0000)
InterimTipDotIcon:addChild(InterimTipDotIconText)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Layer
return result;
end

return Result

