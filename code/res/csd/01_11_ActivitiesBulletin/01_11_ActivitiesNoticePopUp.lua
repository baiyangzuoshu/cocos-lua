--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require("csd.LuaScript.LuaExtend")

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}	
Result["MPLISTLISTDATA"] = { 	
"ui/01_11_ActivitiesBulletin/01_11_ActivitiesBulletin_1.plist",	
"ui/Default/Default_1.plist",	
}	

------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(Layer)
layout:setSize({width = 720.0000, height = 1280.0000})

--Create Bg
local Bg=cc.Node:create()
Bg:setName("Bg")
Bg:setTag(91)
Bg:setCascadeColorEnabled(true)
Bg:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(Bg)
layout:setRightMargin(720.0000)
layout:setTopMargin(1280.0000)
Layer:addChild(Bg)

--Create Bg_1
local Bg_1 = ccui.ImageView:create()
Bg_1:ignoreContentAdaptWithSize(false)
Bg_1:loadTexture("01_11_ActivitiesBulletin/frame_109.png", 1)
Bg_1:setScale9Enabled(true)
Bg_1:setCapInsets({x = 15, y = 358, width = 18, height = 370})
Bg_1:setLayoutComponentEnabled(true)
Bg_1:setName("Bg_1")
Bg_1:setTag(92)
Bg_1:setCascadeColorEnabled(true)
Bg_1:setCascadeOpacityEnabled(true)
Bg_1:setAnchorPoint(0.0000, 0.0000)
Bg_1:setPosition(1.0000, 96.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Bg_1)
layout:setSize({width = 718.0000, height = 1086.0000})
layout:setLeftMargin(1.0000)
layout:setRightMargin(-719.0000)
layout:setTopMargin(-1182.0000)
layout:setBottomMargin(96.0000)
Bg:addChild(Bg_1)

--Create BoxNode
local BoxNode=cc.Node:create()
BoxNode:setName("BoxNode")
BoxNode:setTag(93)
BoxNode:setCascadeColorEnabled(true)
BoxNode:setCascadeOpacityEnabled(true)
BoxNode:setPosition(1.0000, 96.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(BoxNode)
layout:setPositionPercentX(0.0014)
layout:setPositionPercentY(0.0750)
layout:setLeftMargin(1.0000)
layout:setRightMargin(719.0000)
layout:setTopMargin(1184.0000)
layout:setBottomMargin(96.0000)
Layer:addChild(BoxNode)

--Create TitleText_TT
local TitleText_TT = ccui.Text:create()
TitleText_TT:ignoreContentAdaptWithSize(true)
TitleText_TT:setTextAreaSize({width = 0, height = 0})
TitleText_TT:setFontName("font/Font001.ttf")
TitleText_TT:setFontSize(36)
TitleText_TT:setString([[公告]])
TitleText_TT:setTextHorizontalAlignment(1)
TitleText_TT:setTextVerticalAlignment(1)
TitleText_TT:enableOutline({r = 255, g = 255, b = 255, a = 255}, 1)
TitleText_TT:setLayoutComponentEnabled(true)
TitleText_TT:setName("TitleText_TT")
TitleText_TT:setTag(94)
TitleText_TT:setCascadeColorEnabled(true)
TitleText_TT:setCascadeOpacityEnabled(true)
TitleText_TT:setPosition(358.9996, 1051.0040)
layout = ccui.LayoutComponent:bindLayoutComponent(TitleText_TT)
layout:setSize({width = 76.0000, height = 50.0000})
layout:setLeftMargin(320.9996)
layout:setRightMargin(-396.9996)
layout:setTopMargin(-1076.0040)
layout:setBottomMargin(1026.0040)
BoxNode:addChild(TitleText_TT)

--Create ContenetText
local ContenetText = ccui.Text:create()
ContenetText:ignoreContentAdaptWithSize(false)
ContenetText:setFontName("font/Default.ttf")
ContenetText:setFontSize(24)
ContenetText:setString([[1.3.1测试文本一二三四五
                 




















]])
ContenetText:setLayoutComponentEnabled(true)
ContenetText:setName("ContenetText")
ContenetText:setTag(103)
ContenetText:setCascadeColorEnabled(true)
ContenetText:setCascadeOpacityEnabled(true)
ContenetText:setAnchorPoint(0.0000, 1.0000)
ContenetText:setPosition(46.4973, 975.5012)
layout = ccui.LayoutComponent:bindLayoutComponent(ContenetText)
layout:setSize({width = 594.0000, height = 814.0000})
layout:setLeftMargin(46.4973)
layout:setRightMargin(-640.4973)
layout:setTopMargin(-975.5012)
layout:setBottomMargin(161.5012)
BoxNode:addChild(ContenetText)

--Create NoticeSlider
local NoticeSlider = ccui.Slider:create()
NoticeSlider:ignoreContentAdaptWithSize(false)
NoticeSlider:loadBarTexture("01_11_ActivitiesBulletin/strip_020.png", 1)
NoticeSlider:loadProgressBarTexture("01_11_ActivitiesBulletin/strip_020.png", 1)
NoticeSlider:loadSlidBallTextureNormal("01_11_ActivitiesBulletin/strip_021.png", 1)
NoticeSlider:loadSlidBallTexturePressed("01_11_ActivitiesBulletin/strip_021.png", 1)
NoticeSlider:loadSlidBallTextureDisabled("01_11_ActivitiesBulletin/strip_021.png", 1)
NoticeSlider:setLayoutComponentEnabled(true)
NoticeSlider:setName("NoticeSlider")
NoticeSlider:setTag(106)
NoticeSlider:setCascadeColorEnabled(true)
NoticeSlider:setCascadeOpacityEnabled(true)
NoticeSlider:setAnchorPoint(0.0000, 0.0000)
NoticeSlider:setPosition(675.0012, 932.9988)
NoticeSlider:setRotationSkewX(90.0000)
NoticeSlider:setRotationSkewY(90.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(NoticeSlider)
layout:setSize({width = 321.0000, height = 4.0000})
layout:setLeftMargin(675.0012)
layout:setRightMargin(-996.0012)
layout:setTopMargin(-936.9988)
layout:setBottomMargin(932.9988)
BoxNode:addChild(NoticeSlider)

--Create CloseButton

local luaScript = require("csd.LuaScript.newButton")
local CloseButton = luaScript.CreateCustomNode()
CloseButton:ignoreContentAdaptWithSize(false)
CloseButton:loadTextureNormal("01_11_ActivitiesBulletin/button_038.png", 1)
CloseButton:loadTexturePressed("01_11_ActivitiesBulletin/button_038.png", 1)
CloseButton:loadTextureDisabled("Default/Button_Disable.png", 1)
CloseButton:setTitleFontSize(14)
CloseButton:setScale9Enabled(true)
CloseButton:setCapInsets({x = 15, y = 11, width = 168, height = 76})
CloseButton:setLayoutComponentEnabled(true)
CloseButton:setName("CloseButton")
CloseButton:setTag(100)
CloseButton:setCascadeColorEnabled(true)
CloseButton:setCascadeOpacityEnabled(true)
CloseButton:setPosition(360.0000, 85.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(CloseButton)
layout:setSize({width = 208.0000, height = 92.0000})
layout:setLeftMargin(256.0000)
layout:setRightMargin(-464.0000)
layout:setTopMargin(-131.0000)
layout:setBottomMargin(39.0000)

luaScript.SetDownScele(CloseButton, "0.9800")
luaScript.SetClickEffect(CloseButton, "Sound004")
luaScript.SetDownColor(CloseButton, {r = 65, g = 65, b = 70})
BoxNode:addChild(CloseButton)

--Create CloseText_TT
local CloseText_TT = ccui.Text:create()
CloseText_TT:ignoreContentAdaptWithSize(true)
CloseText_TT:setTextAreaSize({width = 0, height = 0})
CloseText_TT:setFontName("font/Font001.ttf")
CloseText_TT:setFontSize(28)
CloseText_TT:setString([[关闭]])
CloseText_TT:setTextHorizontalAlignment(1)
CloseText_TT:setTextVerticalAlignment(1)
CloseText_TT:setLayoutComponentEnabled(true)
CloseText_TT:setName("CloseText_TT")
CloseText_TT:setTag(101)
CloseText_TT:setCascadeColorEnabled(true)
CloseText_TT:setCascadeOpacityEnabled(true)
CloseText_TT:setPosition(104.0000, 45.9995)
CloseText_TT:setTextColor({r = 0, g = 0, b = 0})
layout = ccui.LayoutComponent:bindLayoutComponent(CloseText_TT)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.2788)
layout:setPercentHeight(0.4022)
layout:setSize({width = 58.0000, height = 37.0000})
layout:setLeftMargin(75.0000)
layout:setRightMargin(75.0000)
layout:setTopMargin(27.5005)
layout:setBottomMargin(27.4995)
CloseButton:addChild(CloseText_TT)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Layer
return result;
end

return Result

