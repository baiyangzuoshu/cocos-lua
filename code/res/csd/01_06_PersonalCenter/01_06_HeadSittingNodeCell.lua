--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require("csd.LuaScript.LuaExtend")

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}	
Result["MPLISTLISTDATA"] = { 	
}	

------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(Layer)
layout:setSize({width = 498.0000, height = 126.0000})

--Create HeadNode_1
local HeadNode_1=cc.Node:create()
HeadNode_1:setName("HeadNode_1")
HeadNode_1:setTag(909)
HeadNode_1:setCascadeColorEnabled(true)
HeadNode_1:setCascadeOpacityEnabled(true)
HeadNode_1:setPosition(68.5000, 63.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(HeadNode_1)
layout:setPositionPercentX(0.1376)
layout:setPositionPercentY(0.5000)
layout:setLeftMargin(68.5000)
layout:setRightMargin(429.5000)
layout:setTopMargin(63.0000)
layout:setBottomMargin(63.0000)
Layer:addChild(HeadNode_1)

--Create HeadNode_2
local HeadNode_2=cc.Node:create()
HeadNode_2:setName("HeadNode_2")
HeadNode_2:setTag(910)
HeadNode_2:setCascadeColorEnabled(true)
HeadNode_2:setCascadeOpacityEnabled(true)
HeadNode_2:setPosition(189.5000, 63.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(HeadNode_2)
layout:setPositionPercentX(0.3805)
layout:setPositionPercentY(0.5000)
layout:setLeftMargin(189.5000)
layout:setRightMargin(308.5000)
layout:setTopMargin(63.0000)
layout:setBottomMargin(63.0000)
Layer:addChild(HeadNode_2)

--Create HeadNode_3
local HeadNode_3=cc.Node:create()
HeadNode_3:setName("HeadNode_3")
HeadNode_3:setTag(911)
HeadNode_3:setCascadeColorEnabled(true)
HeadNode_3:setCascadeOpacityEnabled(true)
HeadNode_3:setPosition(310.5000, 63.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(HeadNode_3)
layout:setPositionPercentX(0.6235)
layout:setPositionPercentY(0.5000)
layout:setLeftMargin(310.5000)
layout:setRightMargin(187.5000)
layout:setTopMargin(63.0000)
layout:setBottomMargin(63.0000)
Layer:addChild(HeadNode_3)

--Create HeadNode_4
local HeadNode_4=cc.Node:create()
HeadNode_4:setName("HeadNode_4")
HeadNode_4:setTag(912)
HeadNode_4:setCascadeColorEnabled(true)
HeadNode_4:setCascadeOpacityEnabled(true)
HeadNode_4:setPosition(431.5000, 63.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(HeadNode_4)
layout:setPositionPercentX(0.8665)
layout:setPositionPercentY(0.5000)
layout:setLeftMargin(431.5000)
layout:setRightMargin(66.5000)
layout:setTopMargin(63.0000)
layout:setBottomMargin(63.0000)
Layer:addChild(HeadNode_4)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Layer
return result;
end

return Result

