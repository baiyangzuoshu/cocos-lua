--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require("csd.LuaScript.LuaExtend")

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}	
Result["MPLISTLISTDATA"] = { 	
"ui/01_06_PersonalCenter/01_06_PersonalCenter_1.plist",	
"ui/00_02_Default/00_02_Default_1.plist",	
"ui/02_01_Boast/02_01_Boast_1.plist",	
"ui/02_01_Boast/02_01_Boast_2.plist",	
"ui/00_01_Common/00_01_Common_1.plist",	
"ui/Default/Default_1.plist",	
}	

------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(Layer)
layout:setSize({width = 120.0000, height = 120.0000})

--Create HeadSitting
local HeadSitting=cc.Node:create()
HeadSitting:setName("HeadSitting")
HeadSitting:setTag(158)
HeadSitting:setCascadeColorEnabled(true)
HeadSitting:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(HeadSitting)
layout:setRightMargin(120.0000)
layout:setTopMargin(120.0000)
Layer:addChild(HeadSitting)

--Create HeadPanel
local HeadPanel = ccui.Layout:create()
HeadPanel:ignoreContentAdaptWithSize(false)
HeadPanel:setClippingEnabled(false)
HeadPanel:setBackGroundColorOpacity(102)
HeadPanel:setTouchEnabled(true);
HeadPanel:setLayoutComponentEnabled(true)
HeadPanel:setName("HeadPanel")
HeadPanel:setTag(159)
HeadPanel:setCascadeColorEnabled(true)
HeadPanel:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(HeadPanel)
layout:setSize({width = 120.0000, height = 120.0000})
layout:setRightMargin(-120.0000)
layout:setTopMargin(-120.0000)
HeadSitting:addChild(HeadPanel)

--Create Head
local Head=cc.Node:create()
Head:setName("Head")
Head:setTag(152)
Head:setCascadeColorEnabled(true)
Head:setCascadeOpacityEnabled(true)
Head:setPosition(60.0000, 60.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Head)
layout:setLeftMargin(60.0000)
layout:setRightMargin(-60.0000)
layout:setTopMargin(-60.0000)
layout:setBottomMargin(60.0000)
HeadSitting:addChild(Head)

--Create HeadIcon
local HeadIcon = ccui.ImageView:create()
HeadIcon:ignoreContentAdaptWithSize(false)
HeadIcon:loadTexture("Default/ImageFile.png", 1)
HeadIcon:setLayoutComponentEnabled(true)
HeadIcon:setName("HeadIcon")
HeadIcon:setTag(327)
HeadIcon:setCascadeColorEnabled(true)
HeadIcon:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(HeadIcon)
layout:setSize({width = 100.0000, height = 100.0000})
layout:setLeftMargin(-50.0000)
layout:setRightMargin(-50.0000)
layout:setTopMargin(-50.0000)
layout:setBottomMargin(-50.0000)
Head:addChild(HeadIcon)

--Create CameraButton

local luaScript = require("csd.LuaScript.newButton")
local CameraButton = luaScript.CreateCustomNode()
CameraButton:ignoreContentAdaptWithSize(false)
CameraButton:loadTextureNormal("01_06_PersonalCenter/button_032.png", 1)
CameraButton:loadTexturePressed("01_06_PersonalCenter/button_032.png", 1)
CameraButton:loadTextureDisabled("01_06_PersonalCenter/button_032.png", 1)
CameraButton:setTitleFontSize(14)
CameraButton:setScale9Enabled(true)
CameraButton:setCapInsets({x = 15, y = 11, width = 74, height = 82})
CameraButton:setLayoutComponentEnabled(true)
CameraButton:setName("CameraButton")
CameraButton:setTag(156)
CameraButton:setCascadeColorEnabled(true)
CameraButton:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(CameraButton)
layout:setSize({width = 104.0000, height = 104.0000})
layout:setLeftMargin(-52.0000)
layout:setRightMargin(-52.0000)
layout:setTopMargin(-52.0000)
layout:setBottomMargin(-52.0000)

luaScript.SetDownScele(CameraButton, "1.0000")
luaScript.SetClickEffect(CameraButton, "")
luaScript.SetDownColor(CameraButton, {r = 65, g = 65, b = 70})
Head:addChild(CameraButton)

--Create HeadFrame
local HeadFrame=cc.Node:create()
HeadFrame:setName("HeadFrame")
HeadFrame:setTag(153)
HeadFrame:setCascadeColorEnabled(true)
HeadFrame:setCascadeOpacityEnabled(true)
HeadFrame:setPosition(60.0000, 60.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(HeadFrame)
layout:setLeftMargin(60.0000)
layout:setRightMargin(-60.0000)
layout:setTopMargin(-60.0000)
layout:setBottomMargin(60.0000)
HeadSitting:addChild(HeadFrame)

--Create HeadFrameIcon
local HeadFrameIcon = ccui.ImageView:create()
HeadFrameIcon:ignoreContentAdaptWithSize(false)
HeadFrameIcon:loadTexture("00_02_Default/102001.png", 1)
HeadFrameIcon:setScale9Enabled(true)
HeadFrameIcon:setCapInsets({x = 40, y = 40, width = 40, height = 40})
HeadFrameIcon:setLayoutComponentEnabled(true)
HeadFrameIcon:setName("HeadFrameIcon")
HeadFrameIcon:setTag(157)
HeadFrameIcon:setCascadeColorEnabled(true)
HeadFrameIcon:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(HeadFrameIcon)
layout:setSize({width = 120.0000, height = 120.0000})
layout:setLeftMargin(-60.0000)
layout:setRightMargin(-60.0000)
layout:setTopMargin(-60.0000)
layout:setBottomMargin(-60.0000)
HeadFrame:addChild(HeadFrameIcon)

--Create Selected
local Selected=cc.Node:create()
Selected:setName("Selected")
Selected:setTag(278)
Selected:setCascadeColorEnabled(true)
Selected:setCascadeOpacityEnabled(true)
Selected:setPosition(60.0000, 60.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Selected)
layout:setLeftMargin(60.0000)
layout:setRightMargin(-60.0000)
layout:setTopMargin(-60.0000)
layout:setBottomMargin(60.0000)
HeadSitting:addChild(Selected)

--Create SelectedImage
local SelectedImage = ccui.ImageView:create()
SelectedImage:ignoreContentAdaptWithSize(false)
SelectedImage:loadTexture("01_06_PersonalCenter/frame_136.png", 1)
SelectedImage:setScale9Enabled(true)
SelectedImage:setCapInsets({x = 37, y = 37, width = 40, height = 40})
SelectedImage:setLayoutComponentEnabled(true)
SelectedImage:setName("SelectedImage")
SelectedImage:setTag(276)
SelectedImage:setCascadeColorEnabled(true)
SelectedImage:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(SelectedImage)
layout:setSize({width = 114.0000, height = 114.0000})
layout:setLeftMargin(-57.0000)
layout:setRightMargin(-57.0000)
layout:setTopMargin(-57.0000)
layout:setBottomMargin(-57.0000)
Selected:addChild(SelectedImage)

--Create SelecedIcon
local SelecedIcon = ccui.ImageView:create()
SelecedIcon:ignoreContentAdaptWithSize(false)
SelecedIcon:loadTexture("02_01_Boast/button_017.png", 1)
SelecedIcon:setLayoutComponentEnabled(true)
SelecedIcon:setName("SelecedIcon")
SelecedIcon:setTag(279)
SelecedIcon:setCascadeColorEnabled(true)
SelecedIcon:setCascadeOpacityEnabled(true)
SelecedIcon:setPosition(30.0000, -36.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(SelecedIcon)
layout:setSize({width = 48.0000, height = 48.0000})
layout:setLeftMargin(6.0000)
layout:setRightMargin(-54.0000)
layout:setTopMargin(12.0000)
layout:setBottomMargin(-60.0000)
Selected:addChild(SelecedIcon)

--Create HeadFrameTime
local HeadFrameTime=cc.Node:create()
HeadFrameTime:setName("HeadFrameTime")
HeadFrameTime:setTag(41)
HeadFrameTime:setCascadeColorEnabled(true)
HeadFrameTime:setCascadeOpacityEnabled(true)
HeadFrameTime:setPosition(60.0000, 60.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(HeadFrameTime)
layout:setLeftMargin(60.0000)
layout:setRightMargin(-60.0000)
layout:setTopMargin(-60.0000)
layout:setBottomMargin(60.0000)
HeadSitting:addChild(HeadFrameTime)

--Create HeadFrameTimeIcon
local HeadFrameTimeIcon = cc.Sprite:createWithSpriteFrameName("00_01_Common/icon_090.png")
HeadFrameTimeIcon:setName("HeadFrameTimeIcon")
HeadFrameTimeIcon:setTag(639)
HeadFrameTimeIcon:setCascadeColorEnabled(true)
HeadFrameTimeIcon:setCascadeOpacityEnabled(true)
HeadFrameTimeIcon:setVisible(false)
HeadFrameTimeIcon:setPosition(38.0000, 33.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(HeadFrameTimeIcon)
layout:setSize({width = 50.0000, height = 50.0000})
layout:setLeftMargin(13.0000)
layout:setRightMargin(-63.0000)
layout:setTopMargin(-58.0000)
layout:setBottomMargin(8.0000)
HeadFrameTimeIcon:setBlendFunc({src = 1, dst = 771})
HeadFrameTime:addChild(HeadFrameTimeIcon)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Layer
return result;
end

return Result

