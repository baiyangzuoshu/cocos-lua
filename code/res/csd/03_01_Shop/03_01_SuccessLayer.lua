--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require("csd.LuaScript.LuaExtend")

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}	
Result["MPLISTLISTDATA"] = { 	
"ui/01_06_PersonalCenter/01_06_PersonalCenter_1.plist",	
"ui/02_01_Boast/02_01_Boast_1.plist",	
"ui/02_01_Boast/02_01_Boast_2.plist",	
"ui/01_17_GetRes/01_17_GetRes_1.plist",	
"ui/Default/Default_1.plist",	
}	

------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(Layer)
layout:setSize({width = 720.0000, height = 415.0000})

--Create Middle
local Middle=cc.Node:create()
Middle:setName("Middle")
Middle:setTag(744)
Middle:setCascadeColorEnabled(true)
Middle:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(Middle)
layout:setRightMargin(720.0000)
layout:setTopMargin(415.0000)
Layer:addChild(Middle)

--Create Bg
local Bg = ccui.ImageView:create()
Bg:ignoreContentAdaptWithSize(false)
Bg:loadTexture("01_06_PersonalCenter/frame_038.png", 1)
Bg:setScale9Enabled(true)
Bg:setCapInsets({x = 16, y = 124, width = 18, height = 130})
Bg:setLayoutComponentEnabled(true)
Bg:setName("Bg")
Bg:setTag(29)
Bg:setCascadeColorEnabled(true)
Bg:setCascadeOpacityEnabled(true)
Bg:setPosition(360.0000, 207.5000)
layout = ccui.LayoutComponent:bindLayoutComponent(Bg)
layout:setSize({width = 558.0000, height = 415.0000})
layout:setLeftMargin(81.0000)
layout:setRightMargin(-639.0000)
layout:setTopMargin(-415.0000)
Middle:addChild(Bg)

--Create Confirm
local Confirm=cc.Node:create()
Confirm:setName("Confirm")
Confirm:setTag(743)
Confirm:setCascadeColorEnabled(true)
Confirm:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(Confirm)
Middle:addChild(Confirm)

--Create ConfirmButton

local luaScript = require("csd.LuaScript.newButton")
local ConfirmButton = luaScript.CreateCustomNode()
ConfirmButton:ignoreContentAdaptWithSize(false)
ConfirmButton:loadTextureNormal("02_01_Boast/button_013.png", 1)
ConfirmButton:loadTexturePressed("02_01_Boast/button_013.png", 1)
ConfirmButton:loadTextureDisabled("02_01_Boast/button_013.png", 1)
ConfirmButton:setTitleFontSize(14)
ConfirmButton:setScale9Enabled(true)
ConfirmButton:setCapInsets({x = 15, y = 11, width = 132, height = 78})
ConfirmButton:setLayoutComponentEnabled(true)
ConfirmButton:setName("ConfirmButton")
ConfirmButton:setTag(735)
ConfirmButton:setCascadeColorEnabled(true)
ConfirmButton:setCascadeOpacityEnabled(true)
ConfirmButton:setAnchorPoint(0.5000, 0.0000)
ConfirmButton:setPosition(359.9999, 18.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(ConfirmButton)
layout:setSize({width = 140.0000, height = 80.0000})
layout:setLeftMargin(289.9999)
layout:setRightMargin(-429.9999)
layout:setTopMargin(-98.0000)
layout:setBottomMargin(18.0000)

luaScript.SetDownScele(ConfirmButton, "0.9800")
luaScript.SetClickEffect(ConfirmButton, "Sound004")
luaScript.SetDownColor(ConfirmButton, {r = 65, g = 65, b = 70})
Confirm:addChild(ConfirmButton)

--Create ConfirmText_TT
local ConfirmText_TT = ccui.Text:create()
ConfirmText_TT:ignoreContentAdaptWithSize(true)
ConfirmText_TT:setTextAreaSize({width = 0, height = 0})
ConfirmText_TT:setFontName("font/Font001.ttf")
ConfirmText_TT:setFontSize(28)
ConfirmText_TT:setString([[确定]])
ConfirmText_TT:setTextHorizontalAlignment(1)
ConfirmText_TT:setTextVerticalAlignment(1)
ConfirmText_TT:setLayoutComponentEnabled(true)
ConfirmText_TT:setName("ConfirmText_TT")
ConfirmText_TT:setTag(736)
ConfirmText_TT:setCascadeColorEnabled(true)
ConfirmText_TT:setCascadeOpacityEnabled(true)
ConfirmText_TT:setPosition(360.0000, 65.0000)
ConfirmText_TT:setTextColor({r = 0, g = 0, b = 0})
layout = ccui.LayoutComponent:bindLayoutComponent(ConfirmText_TT)
layout:setSize({width = 59.0000, height = 37.0000})
layout:setLeftMargin(330.5000)
layout:setRightMargin(-389.5000)
layout:setTopMargin(-83.5000)
layout:setBottomMargin(46.5000)
Confirm:addChild(ConfirmText_TT)

--Create SuccessText_TT
local SuccessText_TT = ccui.Text:create()
SuccessText_TT:ignoreContentAdaptWithSize(true)
SuccessText_TT:setTextAreaSize({width = 0, height = 0})
SuccessText_TT:setFontName("font/Font001.ttf")
SuccessText_TT:setFontSize(32)
SuccessText_TT:setString([[购买成功]])
SuccessText_TT:setTextHorizontalAlignment(1)
SuccessText_TT:setTextVerticalAlignment(1)
SuccessText_TT:setLayoutComponentEnabled(true)
SuccessText_TT:setName("SuccessText_TT")
SuccessText_TT:setTag(738)
SuccessText_TT:setCascadeColorEnabled(true)
SuccessText_TT:setCascadeOpacityEnabled(true)
SuccessText_TT:setPosition(360.0000, 380.0002)
layout = ccui.LayoutComponent:bindLayoutComponent(SuccessText_TT)
layout:setSize({width = 130.0000, height = 42.0000})
layout:setLeftMargin(295.0000)
layout:setRightMargin(-425.0000)
layout:setTopMargin(-401.0002)
layout:setBottomMargin(359.0002)
Middle:addChild(SuccessText_TT)

--Create Diamond
local Diamond=cc.Node:create()
Diamond:setName("Diamond")
Diamond:setTag(742)
Diamond:setCascadeColorEnabled(true)
Diamond:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(Diamond)
layout:setRightMargin(720.0000)
layout:setTopMargin(415.0000)
Layer:addChild(Diamond)

--Create DiamondIcon
local DiamondIcon = ccui.ImageView:create()
DiamondIcon:ignoreContentAdaptWithSize(false)
DiamondIcon:loadTexture("01_17_GetRes/icon_034.png", 1)
DiamondIcon:setLayoutComponentEnabled(true)
DiamondIcon:setName("DiamondIcon")
DiamondIcon:setTag(734)
DiamondIcon:setCascadeColorEnabled(true)
DiamondIcon:setCascadeOpacityEnabled(true)
DiamondIcon:setPosition(360.0001, 239.0000)
DiamondIcon:setScaleX(0.9000)
DiamondIcon:setScaleY(0.9000)
layout = ccui.LayoutComponent:bindLayoutComponent(DiamondIcon)
layout:setSize({width = 200.0000, height = 200.0000})
layout:setLeftMargin(260.0001)
layout:setRightMargin(-460.0001)
layout:setTopMargin(-339.0000)
layout:setBottomMargin(139.0000)
Diamond:addChild(DiamondIcon)

--Create DiamondText
local DiamondText = ccui.Text:create()
DiamondText:ignoreContentAdaptWithSize(true)
DiamondText:setTextAreaSize({width = 0, height = 0})
DiamondText:setFontName("font/Default.ttf")
DiamondText:setFontSize(32)
DiamondText:setString([[恭喜您获得XXX钻石]])
DiamondText:setTextHorizontalAlignment(1)
DiamondText:setTextVerticalAlignment(1)
DiamondText:setLayoutComponentEnabled(true)
DiamondText:setName("DiamondText")
DiamondText:setTag(35)
DiamondText:setCascadeColorEnabled(true)
DiamondText:setCascadeOpacityEnabled(true)
DiamondText:setPosition(360.0011, 137.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(DiamondText)
layout:setSize({width = 289.0000, height = 42.0000})
layout:setLeftMargin(215.5011)
layout:setRightMargin(-504.5011)
layout:setTopMargin(-158.0000)
layout:setBottomMargin(116.0000)
Diamond:addChild(DiamondText)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Layer
return result;
end

return Result

