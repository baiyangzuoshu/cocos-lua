--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require("csd.LuaScript.LuaExtend")

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}	
Result["MPLISTLISTDATA"] = { 	
"ui/02_01_Boast/02_01_Boast_1.plist",	
"ui/02_01_Boast/02_01_Boast_2.plist",	
"ui/Default/Default_1.plist",	
}	

------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(Layer)
layout:setSize({width = 720.0000, height = 1280.0000})

--Create UpLeftFit
local UpLeftFit=cc.Node:create()
UpLeftFit:setName("UpLeftFit")
UpLeftFit:setTag(828)
UpLeftFit:setCascadeColorEnabled(true)
UpLeftFit:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(UpLeftFit)
layout:setRightMargin(720.0000)
layout:setTopMargin(1280.0000)
Layer:addChild(UpLeftFit)

--Create MatchingSpineATNode
local MatchingSpineATNode=cc.Node:create()
MatchingSpineATNode:setName("MatchingSpineATNode")
MatchingSpineATNode:setTag(829)
MatchingSpineATNode:setCascadeColorEnabled(true)
MatchingSpineATNode:setCascadeOpacityEnabled(true)
MatchingSpineATNode:setPosition(360.0000, 665.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(MatchingSpineATNode)
layout:setLeftMargin(360.0000)
layout:setRightMargin(-360.0000)
layout:setTopMargin(-665.0000)
layout:setBottomMargin(665.0000)
UpLeftFit:addChild(MatchingSpineATNode)

--Create MatchingExitButton

local luaScript = require("csd.LuaScript.newButton")
local MatchingExitButton = luaScript.CreateCustomNode()
MatchingExitButton:ignoreContentAdaptWithSize(false)
MatchingExitButton:loadTextureNormal("02_01_Boast/button_110.png", 1)
MatchingExitButton:loadTexturePressed("02_01_Boast/button_110.png", 1)
MatchingExitButton:loadTextureDisabled("02_01_Boast/button_110.png", 1)
MatchingExitButton:setTitleFontSize(14)
MatchingExitButton:setLayoutComponentEnabled(true)
MatchingExitButton:setName("MatchingExitButton")
MatchingExitButton:setTag(833)
MatchingExitButton:setCascadeColorEnabled(true)
MatchingExitButton:setCascadeOpacityEnabled(true)
MatchingExitButton:setPosition(360.0000, 274.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(MatchingExitButton)
layout:setSize({width = 148.0000, height = 78.0000})
layout:setLeftMargin(286.0000)
layout:setRightMargin(-434.0000)
layout:setTopMargin(-313.0000)
layout:setBottomMargin(235.0000)

luaScript.SetDownScele(MatchingExitButton, "0.9800")
luaScript.SetClickEffect(MatchingExitButton, "")
luaScript.SetDownColor(MatchingExitButton, {r = 65, g = 65, b = 70})
UpLeftFit:addChild(MatchingExitButton)

--Create MatchingExitText_TT
local MatchingExitText_TT = ccui.Text:create()
MatchingExitText_TT:ignoreContentAdaptWithSize(true)
MatchingExitText_TT:setTextAreaSize({width = 0, height = 0})
MatchingExitText_TT:setFontName("font/Default.ttf")
MatchingExitText_TT:setFontSize(24)
MatchingExitText_TT:setString([[退出]])
MatchingExitText_TT:setLayoutComponentEnabled(true)
MatchingExitText_TT:setName("MatchingExitText_TT")
MatchingExitText_TT:setTag(827)
MatchingExitText_TT:setCascadeColorEnabled(true)
MatchingExitText_TT:setCascadeOpacityEnabled(true)
MatchingExitText_TT:setPosition(74.0000, 39.0000)
MatchingExitText_TT:setTextColor({r = 132, g = 138, b = 209})
layout = ccui.LayoutComponent:bindLayoutComponent(MatchingExitText_TT)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.3311)
layout:setPercentHeight(0.4103)
layout:setSize({width = 49.0000, height = 32.0000})
layout:setLeftMargin(49.5000)
layout:setRightMargin(49.5000)
layout:setTopMargin(23.0000)
layout:setBottomMargin(23.0000)
MatchingExitButton:addChild(MatchingExitText_TT)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List
local MatchingAnimation = {name="MatchingAnimation", startIndex=10, endIndex=50}
result['animation']:addAnimationInfo(MatchingAnimation)

result['root'] = Layer
return result;
end

return Result

